
.. _program_listing_file_include_playback_resource-info_depth-stencil-state-info.h:

Program Listing for File depth-stencil-state-info.h
===================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_playback_resource-info_depth-stencil-state-info.h>` (``include\playback\resource-info\depth-stencil-state-info.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   
   (c) Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "playback/resource-info/resource-info.h"
   
   #include <vector>
   
   namespace gpa {
   namespace playback {
   
   class DepthStencilStateInfo final
       : public ResourceInfo
   {
   public:
       TypeId GetTypeId() const override final;
   
       bool depthEnable{false};                                                         
       api_types::DepthWriteMask depthWriteMask{api_types::GPA_DEPTH_WRITE_MASK_ZERO};  
       api_types::ComparisonFunc depthFunc{api_types::GPA_COMPARISON_NEVER};            
       bool stencilEnable{false};                                                       
       uint8_t stencilReadMask{0};                                                      
       uint8_t stencilWriteMask{0};                                                     
       api_types::DepthStencilOp frontFace{};                                           
       api_types::DepthStencilOp backFace{};                                            
       uint32_t stencilRef{0};                                                          
   };
   
   namespace detail {
   
   template<>
   inline auto MakeTuple<DepthStencilStateInfo>(const DepthStencilStateInfo& depthStencilState)
   {
       return std::make_tuple(depthStencilState.stencilRef,
                              depthStencilState.depthEnable,
                              depthStencilState.depthWriteMask,
                              depthStencilState.depthFunc,
                              depthStencilState.stencilEnable,
                              depthStencilState.stencilReadMask,
                              depthStencilState.stencilWriteMask,
                              depthStencilState.frontFace,
                              depthStencilState.backFace
   
       );
   }
   
   }  // namespace detail
   }  // namespace playback
   }  // namespace gpa
