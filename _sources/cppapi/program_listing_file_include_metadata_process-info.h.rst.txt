
.. _program_listing_file_include_metadata_process-info.h:

Program Listing for File process-info.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_metadata_process-info.h>` (``include\metadata\process-info.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
           Copyright Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "metadata/metadata-header.h"
   
   #include <string>
   
   namespace gpa {
   namespace serialization {
   
   class RandomAccessSerializer;
   
   namespace metadata {
   
   enum class ProcessInfoVersions : uint64_t {
       VERSION_1 = 1,
       VERSION_2,  // process name contains extension in Windows
   };
   
   struct ProcessInfo : public Header
   {
       ProcessInfo();
       ProcessInfo(uint64_t version, char const* processName);
       ~ProcessInfo();
       ProcessInfo(ProcessInfo&& other);
       ProcessInfo& operator=(ProcessInfo&& other);
   
       char const* GetProcessName() const;  
       uint64_t GetVersion() const;
   
       void Write(RandomAccessSerializer* serializer) const;
       void Read(RandomAccessSerializer* serializer);
   
   private:
       uint64_t mVersion{};   
       std::string mStorage;  
   };
   
   }  // namespace metadata
   }  // namespace serialization
   }  // namespace gpa
