
.. _program_listing_file_include_runtime_action-publisher.h:

Program Listing for File action-publisher.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_runtime_action-publisher.h>` (``include\runtime\action-publisher.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   Â© Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "runtime/action-generator.h"
   #include "runtime/event-publisher.h"
   #include "runtime/runtime-common.h"
   
   namespace gpa {
   namespace runtime {
   
   class ActionGenerator;
   class KeyboardMonitor;
   
   class GPA_RUNTIME_EXPORT ActionPublisher : public EventPublisher::Subscriber, public ActionListener
   {
   public:
       ActionPublisher(ActionGenerator* actionGenerator);
       ~ActionPublisher();
       ActionPublisher(const ActionPublisher&) = delete;
       ActionPublisher& operator=(const ActionPublisher&) = delete;
   
       // ActionListener implementation
       void OnAction(char const* action) override;
   
       // gpa::runtime::EventPublisher::Subscriber implementation
       void OnEvent(char const* /*topic*/, gpa::runtime::EventData const& event) override;
   
   private:
       gpa::runtime::ActionGenerator* mActionGenerator;
       gpa::runtime::KeyboardMonitor* mKeyboardMonitor;
   };
   
   }  // namespace runtime
   }  // namespace gpa
