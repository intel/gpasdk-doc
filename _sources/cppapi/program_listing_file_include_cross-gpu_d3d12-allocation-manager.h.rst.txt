
.. _program_listing_file_include_cross-gpu_d3d12-allocation-manager.h:

Program Listing for File d3d12-allocation-manager.h
===================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_cross-gpu_d3d12-allocation-manager.h>` (``include\cross-gpu\d3d12-allocation-manager.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   (C) Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   #pragma once
   
   #include "cross-gpu/cross-gpu-common.h"
   
   #include <atlbase.h>
   #include <d3d12.h>
   
   namespace gpa {
   namespace cross_gpu {
   
   class D3D12AllocationManager : public AllocationManager
   {
   public:
       D3D12AllocationManager(ID3D12Device* device);
       ~D3D12AllocationManager() = default;
   
       Size GetResourceSize(const D3D12_RESOURCE_DESC* desc, ResourceType resourceType) override;
       AllocationInfo GetResourceAllocationInfo1(const std::vector<D3D12_RESOURCE_DESC>& pResourceDescs) override;
       D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO GetRaytracingPrebuildInfo(const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS& inputsDesc) override;
   
   private:
       CComPtr<ID3D12Device4> mDevice4;
       CComPtr<ID3D12Device5> mDevice5;
   };
   
   }  // namespace cross_gpu
   }  // namespace gpa
