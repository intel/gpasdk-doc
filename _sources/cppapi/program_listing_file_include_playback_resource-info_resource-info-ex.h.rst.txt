
.. _program_listing_file_include_playback_resource-info_resource-info-ex.h:

Program Listing for File resource-info-ex.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_playback_resource-info_resource-info-ex.h>` (``include\playback\resource-info\resource-info-ex.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   
   Â© Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "playback/resource-info/resource-info.h"
   
   namespace gpa {
   namespace playback {
   
   class CallableShaderTableInfo;
   class HitShaderTableInfo;
   class IndexBufferInfo;
   class IndirectBufferInfo;
   class InputBindingInfo;
   class MemoryBarrierInfo;
   class MissShaderTableInfo;
   class PipelineConstantInfo;
   class RaygenShaderTableInfo;
   class RenderTargetInfo;
   class ResourceTransferInfo;
   class ShadingRateImageInfo;
   class ShadingRateInfo;
   class VertexBufferInfo;
   
   class ResourceInfo::Ex
       : public detail::Convertible<
             Ex,
             CallableShaderTableInfo,
             HitShaderTableInfo,
             IndexBufferInfo,
             IndirectBufferInfo,
             InputBindingInfo,
             MemoryBarrierInfo,
             MissShaderTableInfo,
             PipelineConstantInfo,
             RaygenShaderTableInfo,
             RenderTargetInfo,
             ResourceTransferInfo,
             ShadingRateImageInfo,
             ShadingRateInfo,
             VertexBufferInfo>
   {
   public:
       Ex() = default;
   
       virtual ~Ex();
   
   protected:
       virtual void OnRegister();
   
       Ex(Ex const&) = default;
       Ex& operator=(Ex const&) = default;
       friend class detail::ResourceInfoRegistry;
       friend bool operator==(Ex const&, Ex const&);
       friend bool operator<(Ex const&, Ex const&);
   };
   
   bool operator==(ResourceInfo::Ex const& lhs, ResourceInfo::Ex const& rhs);
   
   bool operator!=(ResourceInfo::Ex const& lhs, ResourceInfo::Ex const& rhs);
   
   bool operator<(ResourceInfo::Ex const& lhs, ResourceInfo::Ex const& rhs);
   
   }  // namespace playback
   }  // namespace gpa
