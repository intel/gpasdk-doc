
.. _program_listing_file_include_logger_windows-debug-appender.h:

Program Listing for File windows-debug-appender.h
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_logger_windows-debug-appender.h>` (``include\logger\windows-debug-appender.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   (c) 2022 Intel Corporation.
   
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "igpa-config.h"
   
   #include "logger/stream-appender.h"
   
   #include <sstream>
   
   namespace gpa {
   namespace logger {
   
   class GPA_CLASS_EXPORT WindowsDebugAppender : public StreamAppender
   {
   public:
       WindowsDebugAppender();
       ~WindowsDebugAppender();
   
       // LogAppender implementation/override
       void AppendMessage(Options const& options, Severity level, char const* message, MessageState state = kMessageComplete) override;
   
       class Impl
       {
       public:
           virtual ~Impl() = 0;
       };
   
   protected:
       // StreamAppender implementation
       std::ostream* GetStream() override;
   
   private:
       Impl* mImpl{};
       WindowsDebugAppender(WindowsDebugAppender const&) = delete;
       WindowsDebugAppender& operator=(WindowsDebugAppender const&) = delete;
   };
   
   }  // namespace logger
   }  // namespace gpa
