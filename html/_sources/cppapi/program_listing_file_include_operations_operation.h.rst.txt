
.. _program_listing_file_include_operations_operation.h:

Program Listing for File operation.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_operations_operation.h>` (``include/operations/operation.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   Â© Intel Corporation.
    
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "serialization/apicallcontext.h"
   #include "serialization/ifunctioncall.h"
   
   namespace gpa {
   namespace serialization {
   
   struct Operation : public IFunctionCall
   {
       StreamPacketHeaderEx packetHeader;
   
       ~Operation() override;
   
       StreamPacketHeader const& GetContext() const override;
       char const* GetName() const override;
       char const* GetClass() const override;
       char const* GetAPI() const override;
       uint32_t GetParamsCount() const override;
       Argument const* GetParam(uint32_t index, void const** outValue, bool postExecute = false) const override;
       Argument const* GetReturnValue(void const** outValue) const override;
       void* GetApiObjectPtr() const override;
   
       void Read(ArgsReader* reader = nullptr) override;
       void PreWrite() override;
       void PostWrite() override;
   
       virtual size_t Serialize(MemoryBackedSerializer*) const = 0;
       virtual size_t Deserialize(MemoryBackedSerializer*) = 0;
   
       uint8_t GetApiToken() const override;
       uint16_t GetClassToken() const override;
       uint32_t GetFunctionToken() const override;
   
       bool IsSuccessful() override;
   
       void Execute(const GPADispatchTable* dispatchTable) override;
   };
   
   }  // namespace serialization
   }  // namespace gpa
