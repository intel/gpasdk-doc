
.. _program_listing_file_include_playback_directx12-range-repeat-cache-fence.h:

Program Listing for File directx12-range-repeat-cache-fence.h
=============================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_playback_directx12-range-repeat-cache-fence.h>` (``include/playback/directx12-range-repeat-cache-fence.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /******************************************************************************
   Â© Intel Corporation.
    
   This software and the related documents are Intel copyrighted materials,
   and your use of them is governed by the express license under which they
   were provided to you ("License"). Unless the License provides otherwise,
   you may not use, modify, copy, publish, distribute, disclose or transmit
   this software or the related documents without Intel's prior written
   permission.
   
   
    This software and the related documents are provided as is, with no express
   or implied warranties, other than those that are expressly stated in the
   License.
   
   ******************************************************************************/
   
   #pragma once
   
   #include "playback/directx-range-repeat-cache.h"
   #include <d3d12.h>
   #include <vector>
   #include <map>
   
   namespace gpa {
   namespace playback {
   
   class Callable;
   
   namespace repeat {
   namespace directx {
   
   class ID3D12FenceRangeRepeatCache : public RangeRepeatCacheCOM
   {
       uint64_t mCompletedValueAtRangeStart = 0;
       HANDLE mLastFenceRegisteredEvent = NULL;
       uint64_t mLastFenceRegisteredEventCompletionValue = 0;
       bool mLastFenceRegisteredEventSignaled = false;
   
   public:
       typedef std::shared_ptr<ID3D12FenceRangeRepeatCache> Ptr;
   
       ID3D12FenceRangeRepeatCache(playback::Context* context, playback::Callable* callable);
   
       void OnRangeEnter(GPADispatchTable const*& table) override;
       void OnRangeRepeatRecreateObject(GPADispatchTable const*& table, uint64_t repeatPass) override;
       void OnRangeRepeatRestoreState(GPADispatchTable const*& table, uint64_t repeatPass) override;
       void OnRangeExit(GPADispatchTable const*& table) override;
   };
   
   }  // namespace directx
   }  // namespace repeat
   }  // namespace playback
   }  // namespace gpa
